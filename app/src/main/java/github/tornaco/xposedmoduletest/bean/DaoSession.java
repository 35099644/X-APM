package github.tornaco.xposedmoduletest.bean;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import github.tornaco.xposedmoduletest.bean.PackageInfo;
import github.tornaco.xposedmoduletest.bean.AccessInfo;
import github.tornaco.xposedmoduletest.bean.BootCompletePackage;
import github.tornaco.xposedmoduletest.bean.AutoStartPackage;

import github.tornaco.xposedmoduletest.bean.PackageInfoDao;
import github.tornaco.xposedmoduletest.bean.AccessInfoDao;
import github.tornaco.xposedmoduletest.bean.BootCompletePackageDao;
import github.tornaco.xposedmoduletest.bean.AutoStartPackageDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig packageInfoDaoConfig;
    private final DaoConfig accessInfoDaoConfig;
    private final DaoConfig bootCompletePackageDaoConfig;
    private final DaoConfig autoStartPackageDaoConfig;

    private final PackageInfoDao packageInfoDao;
    private final AccessInfoDao accessInfoDao;
    private final BootCompletePackageDao bootCompletePackageDao;
    private final AutoStartPackageDao autoStartPackageDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        packageInfoDaoConfig = daoConfigMap.get(PackageInfoDao.class).clone();
        packageInfoDaoConfig.initIdentityScope(type);

        accessInfoDaoConfig = daoConfigMap.get(AccessInfoDao.class).clone();
        accessInfoDaoConfig.initIdentityScope(type);

        bootCompletePackageDaoConfig = daoConfigMap.get(BootCompletePackageDao.class).clone();
        bootCompletePackageDaoConfig.initIdentityScope(type);

        autoStartPackageDaoConfig = daoConfigMap.get(AutoStartPackageDao.class).clone();
        autoStartPackageDaoConfig.initIdentityScope(type);

        packageInfoDao = new PackageInfoDao(packageInfoDaoConfig, this);
        accessInfoDao = new AccessInfoDao(accessInfoDaoConfig, this);
        bootCompletePackageDao = new BootCompletePackageDao(bootCompletePackageDaoConfig, this);
        autoStartPackageDao = new AutoStartPackageDao(autoStartPackageDaoConfig, this);

        registerDao(PackageInfo.class, packageInfoDao);
        registerDao(AccessInfo.class, accessInfoDao);
        registerDao(BootCompletePackage.class, bootCompletePackageDao);
        registerDao(AutoStartPackage.class, autoStartPackageDao);
    }
    
    public void clear() {
        packageInfoDaoConfig.getIdentityScope().clear();
        accessInfoDaoConfig.getIdentityScope().clear();
        bootCompletePackageDaoConfig.getIdentityScope().clear();
        autoStartPackageDaoConfig.getIdentityScope().clear();
    }

    public PackageInfoDao getPackageInfoDao() {
        return packageInfoDao;
    }

    public AccessInfoDao getAccessInfoDao() {
        return accessInfoDao;
    }

    public BootCompletePackageDao getBootCompletePackageDao() {
        return bootCompletePackageDao;
    }

    public AutoStartPackageDao getAutoStartPackageDao() {
        return autoStartPackageDao;
    }

}
